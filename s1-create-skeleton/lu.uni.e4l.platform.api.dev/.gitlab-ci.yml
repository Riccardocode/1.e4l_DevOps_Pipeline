image: docker:20.10.7

services:
  - docker:dind

before_script:
- export GRADLE_USER_HOME=`pwd`/.gradle
- export CURRENT_DATETIME=`date +"%Y%m%d-%H%M%S"`
- export PROPERTIES=./src/main/resources/application.properties

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

stages:
  - pre-build
  - build
  # - test
  - deploy-stage

pre-build:
  rules:
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  image: ubuntu:latest
  stage: pre-build
  tags: [e4l-backend]
  script: apt-get update; apt-get --yes install gettext moreutils;envsubst < $PROPERTIES | sponge $PROPERTIES
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
    - build
    - .gradle
  artifacts:
    paths:
      - src/main/resources/application.properties

build:
  rules:
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  image: gradle:8.3
  stage: build
  tags: [e4l-backend]
  script: gradle --build-cache clean build bootJar
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
    - build
    - .gradle
  artifacts:
    paths:
      - build
    expire_in: 1 week

# test:
#   rules:
#   - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
#   - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#   image: gradle:8.3
#   stage: test
#   script: gradle clean check
#   cache:
#     key: "$CI_COMMIT_REF_NAME"
#     policy: pull
#     paths:
#     - build
#     - .gradle


deploy-stage:
  stage: deploy-stage
  tags:
    - stage-vm-backend-shell
  image: ubuntu:latest
  script:
    # Switch to root user to ensure permissions
    # - apt-get update && apt-get install -y openssh-client  # Install SSH client for scp
    # Create a temporary directory within the CI workspace
    - cp -r build/libs/e4l-server.jar /home/vagrant/stage-backend/build/libs
    
  dependencies:
    - build  # Ensures artifacts from the build stage are available
